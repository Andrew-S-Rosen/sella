name: release

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build package
      run: |
        python3 -m pip install --upgrade pip build setuptools cython wheel numpy scipy ase jax jaxlib
        python3 -m build --wheel

    - name: Archive build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-linux-${{ matrix.python-version }}
        path: dist

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Build package
      run: |
        python3 -m pip install --upgrade pip build setuptools cython wheel numpy scipy ase jax jaxlib
        python3 -m build --wheel

    - name: Archive build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: dist-macos-${{ matrix.python-version }}
        path: dist

  upload:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build setuptools cython numpy scipy ase jax jaxlib
        pip install -r requirements.txt

    - name: Create source dist
      run: python3 -m build --sdist

    - name: Stage linux 3.8
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-3.8
    - run: mv -v dist-linux-3.8/* dist/

    - name: Stage linux 3.9
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-3.9
    - run: mv -v dist-linux-3.9/* dist/

    - name: Stage linux 3.10
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-3.10
    - run: mv -v dist-linux-3.10/* dist/

    - name: Stage linux 3.11
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-3.11
    - run: mv -v dist-linux-3.11/* dist/

    - name: Stage linux 3.12
      uses: actions/download-artifact@v1
      with:
        name: dist-linux-3.12
    - run: mv -v dist-linux-3.12/* dist/

    - name: Stage macos 3.8
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-3.8
    - run: mv -v dist-macos-3.8/* dist/

    - name: Stage macos 3.9
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-3.9
    - run: mv -v dist-macos-3.9/* dist/

    - name: Stage macos 3.10
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-3.10
    - run: mv -v dist-macos-3.10/* dist/

    - name: Stage macos 3.11
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-3.11
    - run: mv -v dist-macos-3.11/* dist/

    - name: Stage macos 3.12
      uses: actions/download-artifact@v1
      with:
        name: dist-macos-3.12
    - run: mv -v dist-macos-3.12/* dist/

    - name: Upload with twine
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        ls -l dist/*
        pip install twine
        twine upload dist/*
